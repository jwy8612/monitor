; iccavr asm header file for m32M1
; generated by maschag 0.8.7 on 04-15-2009
;-------------------------------------------------------------
;
; Memory info
FLASHEND                =0x7FFF
E2END                   =0x03FF
RAMSTART                =0x0100
RAMEND                  =0x08FF
XRAMEND                 =0 ; Part has no external RAM interface
;
;-------------------------------------------------------------
;
; Port B
PINB                    =0x03  ; for IN/OUT, CBI/SBI, SBIC/SBIS
PINB7                   =7
PINB6                   =6
PINB5                   =5
PINB4                   =4
PINB3                   =3
PINB2                   =2
PINB1                   =1
PINB0                   =0
DDRB                    =0x04  ; for IN/OUT, CBI/SBI, SBIC/SBIS
DDB7                    =7
DDB6                    =6
DDB5                    =5
DDB4                    =4
DDB3                    =3
DDB2                    =2
DDB1                    =1
DDB0                    =0
PORTB                   =0x05  ; for IN/OUT, CBI/SBI, SBIC/SBIS
PORTB7                  =7
PORTB6                  =6
PORTB5                  =5
PORTB4                  =4
PORTB3                  =3
PORTB2                  =2
PORTB1                  =1
PORTB0                  =0
PB7                     =7
PB6                     =6
PB5                     =5
PB4                     =4
PB3                     =3
PB2                     =2
PB1                     =1
PB0                     =0
;
; Port C
PINC                    =0x06  ; for IN/OUT, CBI/SBI, SBIC/SBIS
PINC7                   =7
PINC6                   =6
PINC5                   =5
PINC4                   =4
PINC3                   =3
PINC2                   =2
PINC1                   =1
PINC0                   =0
DDRC                    =0x07  ; for IN/OUT, CBI/SBI, SBIC/SBIS
DDC7                    =7
DDC6                    =6
DDC5                    =5
DDC4                    =4
DDC3                    =3
DDC2                    =2
DDC1                    =1
DDC0                    =0
PORTC                   =0x08  ; for IN/OUT, CBI/SBI, SBIC/SBIS
PORTC7                  =7
PORTC6                  =6
PORTC5                  =5
PORTC4                  =4
PORTC3                  =3
PORTC2                  =2
PORTC1                  =1
PORTC0                  =0
PC7                     =7
PC6                     =6
PC5                     =5
PC4                     =4
PC3                     =3
PC2                     =2
PC1                     =1
PC0                     =0
;
; Port D
PIND                    =0x09  ; for IN/OUT, CBI/SBI, SBIC/SBIS
PIND7                   =7
PIND6                   =6
PIND5                   =5
PIND4                   =4
PIND3                   =3
PIND2                   =2
PIND1                   =1
PIND0                   =0
DDRD                    =0x0A  ; for IN/OUT, CBI/SBI, SBIC/SBIS
DDD7                    =7
DDD6                    =6
DDD5                    =5
DDD4                    =4
DDD3                    =3
DDD2                    =2
DDD1                    =1
DDD0                    =0
PORTD                   =0x0B  ; for IN/OUT, CBI/SBI, SBIC/SBIS
PORTD7                  =7
PORTD6                  =6
PORTD5                  =5
PORTD4                  =4
PORTD3                  =3
PORTD2                  =2
PORTD1                  =1
PORTD0                  =0
PD7                     =7
PD6                     =6
PD5                     =5
PD4                     =4
PD3                     =3
PD2                     =2
PD1                     =1
PD0                     =0
;
; Port E
PINE                    =0x0C  ; for IN/OUT, CBI/SBI, SBIC/SBIS
PINE2                   =2
PINE1                   =1
PINE0                   =0
DDRE                    =0x0D  ; for IN/OUT, CBI/SBI, SBIC/SBIS
DDE2                    =2
DDE1                    =1
DDE0                    =0
PORTE                   =0x0E  ; for IN/OUT, CBI/SBI, SBIC/SBIS
PORTE2                  =2
PORTE1                  =1
PORTE0                  =0
PE2                     =2
PE1                     =1
PE0                     =0
;
; Timer/Counter Interrupts
TIFR0                   =0x15  ; for IN/OUT, CBI/SBI, SBIC/SBIS
OCF0B                   =2
OCF0A                   =1
TOV0                    =0
TIFR1                   =0x16  ; for IN/OUT, CBI/SBI, SBIC/SBIS
ICF1                    =5
OCF1B                   =2
OCF1A                   =1
TOV1                    =0
;
; GPIO registers
GPIOR0                  =0x1E  ; for IN/OUT, CBI/SBI, SBIC/SBIS
GPIOR1                  =0x19  ; for IN/OUT, CBI/SBI, SBIC/SBIS
GPIOR2                  =0x1A  ; for IN/OUT, CBI/SBI, SBIC/SBIS
;
; Pin Change Interrupt Flags and Masks
PCIFR                   =0x1B  ; for IN/OUT, CBI/SBI, SBIC/SBIS
PCIF3                   =3
PCIF2                   =2
PCIF1                   =1
PCIF0                   =0
PCICR                   =0x68  ; memory mapped, for LD/ST
PCIE3                   =3
PCIE2                   =2
PCIE1                   =1
PCIE0                   =0
PCMSK0                  =0x6A  ; memory mapped, for LD/ST
PCINT7                  =7
PCINT6                  =6
PCINT5                  =5
PCINT4                  =4
PCINT3                  =3
PCINT2                  =2
PCINT1                  =1
PCINT0                  =0
PCMSK1                  =0x6B  ; memory mapped, for LD/ST
PCINT15                 =7
PCINT14                 =6
PCINT13                 =5
PCINT12                 =4
PCINT11                 =3
PCINT10                 =2
PCINT9                  =1
PCINT8                  =0
PCMSK2                  =0x6C  ; memory mapped, for LD/ST
PCINT23                 =7
PCINT22                 =6
PCINT21                 =5
PCINT20                 =4
PCINT19                 =3
PCINT18                 =2
PCINT17                 =1
PCINT16                 =0
PCMSK3                  =0x6D  ; memory mapped, for LD/ST
PCINT26                 =2
PCINT25                 =1
PCINT24                 =0
;
; External Interrupt Flags and Masks
EIFR                    =0x1C  ; for IN/OUT, CBI/SBI, SBIC/SBIS
INTF3                   =3
INTF2                   =2
INTF1                   =1
INTF0                   =0
EICRA                   =0x69  ; memory mapped, for LD/ST
ISC31                   =7
ISC30                   =6
ISC21                   =5
ISC20                   =4
ISC11                   =3
ISC10                   =2
ISC01                   =1
ISC00                   =0
EIMSK                   =0x1D  ; for IN/OUT, CBI/SBI, SBIC/SBIS
INT3                    =3
INT2                    =2
INT1                    =1
INT0                    =0
;
; EEPROM
EECR                    =0x1F  ; for IN/OUT, CBI/SBI, SBIC/SBIS
EERIE                   =3
EEMWE                   =2
EEWE                    =1
EERE                    =0
EEDR                    =0x20  ; for IN/OUT, CBI/SBI, SBIC/SBIS
EEAR                    =0x21  ; for IN/OUT
EEARL                   =0x21  ; for IN/OUT
EEARH                   =0x22  ; for IN/OUT
;
; General Timer Control
GTCCR                   =0x23  ; for IN/OUT
TSM                     =7
ICPSEL1                 =6
PSRSYNC                 =0
PSR10                   =0
;
; to enable multi-part lib writing
;
; Timer/Counter 0
TCCR0A                  =0x24  ; for IN/OUT
COM0A1                  =7
COM0A0                  =6
COM0B1                  =5
COM0B0                  =4
WGM01                   =1
WGM00                   =0
TCCR0B                  =0x25  ; for IN/OUT
FOC0A                   =7
FOC0B                   =6
WGM02                   =3
CS02                    =2
CS01                    =1
CS00                    =0
TCNT0                   =0x26  ; for IN/OUT
OCR0A                   =0x27  ; for IN/OUT
OCR0B                   =0x28  ; for IN/OUT
;
; PLL
PLLCSR                  =0x29  ; for IN/OUT
PLLF                    =2
PLLE                    =1
PLOCK                   =0
;
; SPI
SPCR                    =0x2C  ; for IN/OUT
SPIE                    =7
SPE                     =6
DORD                    =5
MSTR                    =4
CPOL                    =3
CPHA                    =2
SPR1                    =1
SPR0                    =0
SPSR                    =0x2D  ; for IN/OUT
SPIF                    =7
WCOL                    =6
SPI2X                   =0
SPDR                    =0x2E  ; for IN/OUT
;
; Analog Comparator
ACSR                    =0x30  ; for IN/OUT
AC3IF                   =7
AC2IF                   =6
AC1IF                   =5
AC0IF                   =4
AC3O                    =3
AC2O                    =2
AC1O                    =1
AC0O                    =0
;
; Debug Monitor Registers
; #define MONDR	(*(volatile unsigned char *)0x51) 
; #define MSMCR	(*(volatile unsigned char *)0x52) 
; #define DWDR 	(*(volatile unsigned char *)0x51) 
;
; MCU general
SMCR                    =0x33  ; for IN/OUT
SM2                     =3
SM1                     =2
SM0                     =1
SE                      =0
MCUSR                   =0x34  ; for IN/OUT
WDRF                    =3
BORF                    =2
EXTRF                   =1
PORF                    =0
MCUCR                   =0x35  ; for IN/OUT
SPIPS                   =7
PUD                     =4
IVSEL                   =1
IVCE                    =0
;
; SPM Conrol Register
SPMCSR                  =0x37  ; for IN/OUT
SPMIE                   =7
RWWSB                   =6
SIGRD                   =5
RWWSRE                  =4
BLBSET                  =3
PGWRT                   =2
PGERS                   =1
SPMEN                   =0
;
; Stack Pointer
SP                      =0x3D  ; for IN/OUT
SPL                     =0x3D  ; for IN/OUT
SPH                     =0x3E  ; for IN/OUT
;
; Status REGister
SREG                    =0x3F  ; for IN/OUT
;
; Watchdog Timer Control Register
WDTCSR                  =0x60  ; memory mapped, for LD/ST
WDIF                    =7
WDIE                    =6
WDP3                    =5
WDCE                    =4
WDE                     =3
WDP2                    =2
WDP1                    =1
WDP0                    =0
;
; Oscillator
CLKPR                   =0x61  ; memory mapped, for LD/ST
CLKPCE                  =7
CLKPS3                  =3
CLKPS2                  =2
CLKPS1                  =1
CLKPS0                  =0
OSCCAL                  =0x66  ; memory mapped, for LD/ST
;
; Power Reduction Register
PRR                     =0x64  ; memory mapped, for LD/ST
PRCAN                   =6
PRPSC                   =5
PRTIM1                  =4
PRTIM0                  =3
PRSPI                   =2
PRLIN                   =1
PRADC                   =0
;
; Analog Amplifier
AMP0CSR                 =0x75  ; memory mapped, for LD/ST
AMP0EN                  =7
AMP0IS                  =6
AMP0G1                  =5
AMP0G0                  =4
AMPCMP0                 =3
AMP0TS2                 =2
AMP0TS1                 =1
AMP0TS0                 =0
AMP1CSR                 =0x76  ; memory mapped, for LD/ST
AMP1EN                  =7
AMP1IS                  =6
AMP1G1                  =5
AMP1G0                  =4
AMPCMP1                 =3
AMP1TS2                 =2
AMP1TS1                 =1
AMP1TS0                 =0
AMP2CSR                 =0x77  ; memory mapped, for LD/ST
AMP2EN                  =7
AMP2IS                  =6
AMP2G1                  =5
AMP2G0                  =4
AMPCMP2                 =3
AMP2TS2                 =2
AMP2TS1                 =1
AMP2TS0                 =0
;
; Analog Digital Converter
ADC                     =0x78  ; memory mapped, for LD/ST
ADCL                    =0x78  ; memory mapped, for LD/ST
ADCH                    =0x79  ; memory mapped, for LD/ST
ADCSRA                  =0x7A  ; memory mapped, for LD/ST
ADEN                    =7
ADSC                    =6
ADATE                   =5
ADFR                    =5
ADIF                    =4
ADIE                    =3
ADPS2                   =2
ADPS1                   =1
ADPS0                   =0
ADCSRB                  =0x7B  ; memory mapped, for LD/ST
ADHSM                   =7
ISRCEN                  =6
AREFEN                  =5
ADTS3                   =3
ADTS2                   =2
ADTS1                   =1
ADTS0                   =0
ADMUX                   =0x7C  ; memory mapped, for LD/ST
REFS1                   =7
REFS0                   =6
ADLAR                   =5
MUX3                    =3
MUX2                    =2
MUX1                    =1
MUX0                    =0
DIDR1                   =0x7F  ; memory mapped, for LD/ST
AMP2PD                  =6
ACMP0D                  =5
AMP0PD                  =4
AMP0ND                  =3
ACMP1D                  =2
ADC10D                  =2
ACMP3D                  =1
AMP1PD                  =1
ADC9D                   =1
AMP1ND                  =0
ADC8D                   =0
DIDR0                   =0x7E  ; memory mapped, for LD/ST
ADC7D                   =7
ACMPN1D                 =6
AMP2ND                  =6
ADC6D                   =6
ACMPN0D                 =5
ADC5D                   =5
ADC4D                   =4
ACMPN2D                 =3
ADC3D                   =3
ACMP2D                  =2
ADC2D                   =2
ADC1D                   =1
ACMPN3D                 =0
ADC0D                   =0
;
; DAC
DACON                   =0x90  ; memory mapped, for LD/ST
DAATE                   =7
DATS2                   =6
DATS1                   =5
DATS0                   =4
DALA                    =2
DAOE                    =1
DAEN                    =0
DAC                     =0x91  ; memory mapped, for LD/ST
DACL                    =0x91  ; memory mapped, for LD/ST
DACH                    =0x92  ; memory mapped, for LD/ST
;
; Analog Comparator
AC0CON                  =0x94  ; memory mapped, for LD/ST
AC0EN                   =7
AC0IE                   =6
AC0IS1                  =5
AC0IS0                  =4
ACCKSEL                 =3
AC0M2                   =2
AC0M1                   =1
AC0M0                   =0
AC1CON                  =0x95  ; memory mapped, for LD/ST
AC1EN                   =7
AC1IE                   =6
AC1IS1                  =5
AC1IS0                  =4
AC1ICE                  =3
AC1M2                   =2
AC1M1                   =1
AC1M0                   =0
AC2CON                  =0x96  ; memory mapped, for LD/ST
AC2EN                   =7
AC2IE                   =6
AC2IS1                  =5
AC2IS0                  =4
AC2M2                   =2
AC2M1                   =1
AC2M0                   =0
AC3CON                  =0x97  ; memory mapped, for LD/ST
AC3EN                   =7
AC3IE                   =6
AC3IS1                  =5
AC3IS0                  =4
AC3M2                   =2
AC3M1                   =1
AC3M0                   =0
;
; Timer/Counter Interrupts
TIMSK0                  =0x6E  ; memory mapped, for LD/ST
OCIE0B                  =1
OCIE0A                  =0
TOIE0                   =0
TIMSK1                  =0x6F  ; memory mapped, for LD/ST
TICIE1                  =5
ICIE1                   =5
OCIE1B                  =2
OCIE1A                  =1
TOIE1                   =0
;
; Timer/Counter 1
TCCR1A                  =0x80  ; memory mapped, for LD/ST
COM1A1                  =7
COM1A0                  =6
COM1B1                  =5
COM1B0                  =4
WGM11                   =1
WGM10                   =0
TCCR1B                  =0x81  ; memory mapped, for LD/ST
ICNC1                   =7
ICES1                   =6
WGM13                   =4
WGM12                   =3
CS12                    =2
CS11                    =1
CS10                    =0
TCCR1C                  =0x82  ; memory mapped, for LD/ST
FOC1A                   =7
FOC1B                   =6
TCNT1                   =0x84  ; memory mapped, for LD/ST
TCNT1L                  =0x84  ; memory mapped, for LD/ST
TCNT1H                  =0x85  ; memory mapped, for LD/ST
ICR1                    =0x86  ; memory mapped, for LD/ST
ICR1L                   =0x86  ; memory mapped, for LD/ST
ICR1H                   =0x87  ; memory mapped, for LD/ST
OCR1A                   =0x88  ; memory mapped, for LD/ST
OCR1AL                  =0x88  ; memory mapped, for LD/ST
OCR1AH                  =0x89  ; memory mapped, for LD/ST
OCR1B                   =0x8A  ; memory mapped, for LD/ST
OCR1BL                  =0x8A  ; memory mapped, for LD/ST
OCR1BH                  =0x8B  ; memory mapped, for LD/ST
;
; PSC registers
POCR0SA                 =0xA0  ; memory mapped, for LD/ST
POCR0SAL                =0xA0  ; memory mapped, for LD/ST
POCR0SAH                =0xA1  ; memory mapped, for LD/ST
POCR0RA                 =0xA2  ; memory mapped, for LD/ST
POCR0RAL                =0xA2  ; memory mapped, for LD/ST
POCR0RAH                =0xA3  ; memory mapped, for LD/ST
POCR0SB                 =0xA4  ; memory mapped, for LD/ST
POCR0SBL                =0xA4  ; memory mapped, for LD/ST
POCR0SBH                =0xA5  ; memory mapped, for LD/ST
POCR1SA                 =0xA6  ; memory mapped, for LD/ST
POCR1SAL                =0xA6  ; memory mapped, for LD/ST
POCR1SAH                =0xA7  ; memory mapped, for LD/ST
POCR1RA                 =0xA8  ; memory mapped, for LD/ST
POCR1RAL                =0xA8  ; memory mapped, for LD/ST
POCR1RAH                =0xA9  ; memory mapped, for LD/ST
POCR1SB                 =0xAA  ; memory mapped, for LD/ST
POCR1SBL                =0xAA  ; memory mapped, for LD/ST
POCR1SBH                =0xAB  ; memory mapped, for LD/ST
POCR2SA                 =0xAC  ; memory mapped, for LD/ST
POCR2SAL                =0xAC  ; memory mapped, for LD/ST
POCR2SAH                =0xAD  ; memory mapped, for LD/ST
POCR2RA                 =0xAE  ; memory mapped, for LD/ST
POCR2RAL                =0xAE  ; memory mapped, for LD/ST
POCR2RAH                =0xAF  ; memory mapped, for LD/ST
POCR2SB                 =0xB0  ; memory mapped, for LD/ST
POCR2SBL                =0xB0  ; memory mapped, for LD/ST
POCR2SBH                =0xB1  ; memory mapped, for LD/ST
POCR_RB                 =0xB2  ; memory mapped, for LD/ST
POCR_RBL                =0xB2  ; memory mapped, for LD/ST
POCR_RBH                =0xB3  ; memory mapped, for LD/ST
PSYNC                   =0xB2  ; memory mapped, for LD/ST
PSYNC21                 =5
PSYNC20                 =4
PSYNC11                 =3
PSYNC10                 =2
PSYNC01                 =1
PSYNC00                 =0
PCNF                    =0xB2  ; memory mapped, for LD/ST
PULOCK1                 =5
PMODE                   =4
POPB                    =3
POPA                    =2
POC                     =0xB2  ; memory mapped, for LD/ST
POEN2B                  =1
POEN2A                  =0
POEN1B                  =1
POEN1A                  =0
POEN0B                  =1
POEN0A                  =0
PCTL                    =0xB2  ; memory mapped, for LD/ST
PPRE1                   =7
PPRE0                   =6
PCLKSEL                 =5
PCCYC                   =1
PRUN                    =0
PMIC0                   =0xB2  ; memory mapped, for LD/ST
POVEN0                  =7
PISEL0                  =6
PELEV0                  =5
PFLTE0                  =4
PAOC0                   =3
PRFM02                  =2
PRFM01                  =1
PRFM00                  =0
PMIC1                   =0xB2  ; memory mapped, for LD/ST
POVEN1                  =7
PISEL1                  =6
PELEV1                  =5
PFLTE1                  =4
PAOC1                   =3
PRFM12                  =2
PRFM11                  =1
PRFM10                  =0
PMIC2                   =0xB2  ; memory mapped, for LD/ST
POVEN2                  =7
PISEL2                  =6
PELEV2                  =5
PFLTE2                  =4
PAOC2                   =3
PRFM22                  =2
PRFM21                  =1
PRFM20                  =0
PIM                     =0xB2  ; memory mapped, for LD/ST
PEVE2                   =3
PEVE1                   =2
PEVE0                   =1
PEOEP                   =0
PIFR                    =0xB2  ; memory mapped, for LD/ST
PEV2                    =3
PEV1                    =2
PEV0                    =1
PEOP                    =0
;
; L.I.N
LINCR                   =0xC8  ; memory mapped, for LD/ST
LSWRES                  =7
LIN13                   =6
LCONF1                  =5
LCONF0                  =4
LENA                    =3
LCMD2                   =2
LCMD1                   =1
LCMD0                   =0
LINSIR                  =0xC9  ; memory mapped, for LD/ST
LIDST2                  =7
LIDST1                  =6
LIDST0                  =5
LBUSY                   =4
LERR                    =3
LIDOK                   =2
LTXOK                   =1
LRXOK                   =0
LINENIR                 =0xCA  ; memory mapped, for LD/ST
LENERR                  =3
LENIDOK                 =2
LENTXOK                 =1
LENRXOK                 =0
LINERR                  =0xCB  ; memory mapped, for LD/ST
LABORT                  =7
LTOERR                  =6
LOVERR                  =5
LFERR                   =4
LSERR                   =3
LPERR                   =2
LCERR                   =1
LBERR                   =0
LINBTR                  =0xCC  ; memory mapped, for LD/ST
LDISR                   =7
LINBRR                  =0xCD  ; memory mapped, for LD/ST
LINBRRL                 =0xCD  ; memory mapped, for LD/ST
LINBRRH                 =0xCE  ; memory mapped, for LD/ST
LINDLR                  =0xCF  ; memory mapped, for LD/ST
LTXDL3                  =7
LTXDL2                  =6
LTXDL1                  =5
LTXDL0                  =4
LRXDL3                  =3
LRXDL2                  =2
LRXDL1                  =1
LRXDL0                  =0
LINIDR                  =0xD0  ; memory mapped, for LD/ST
LP1                     =7
LP0                     =6
LDL1                    =5
LDL0                    =4
LID5                    =5
LID4                    =4
LID3                    =3
LID2                    =2
LID1                    =1
LID0                    =0
LINSEL                  =0xD1  ; memory mapped, for LD/ST
LAINC                   =3
LINDX2                  =2
LINDX1                  =1
LINDX0                  =0
LINDAT                  =0xD2  ; memory mapped, for LD/ST
;
; C.A.N
CANGCON                 =0xD8  ; memory mapped, for LD/ST
ABRQ                    =7
OVRQ                    =6
TTC                     =5
SYNCTTC                 =4
LISTEN                  =3
TEST                    =2
ENA                     =1
SWRES                   =0
CANGSTA                 =0xD9  ; memory mapped, for LD/ST
OVFG                    =6
OVRG                    =6
TXBSY                   =4
RXBSY                   =3
ENFG                    =2
BOFF                    =1
ERRP                    =0
CANGIT                  =0xDA  ; memory mapped, for LD/ST
CANIT                   =7
BOFFIT                  =6
OVRTIM                  =5
OVRBUF                  =4
BXOK                    =4
SERG                    =3
CERG                    =2
FERG                    =1
AERG                    =0
ERR_GEN_MSK             =15
INT_GEN_MSK             =0x3F  ; for IN/OUT
CANGIE                  =0xDB  ; memory mapped, for LD/ST
ENIT                    =7
ENBOFF                  =6
ENRX                    =5
ENTX                    =4
ENERMOB                 =3
ENERR                   =3
ENBUF                   =2
ENBX                    =2
ENERG                   =1
ENOVRT                  =0
CANEN2                  =0xDC  ; memory mapped, for LD/ST
CANEN1                  =0xDD  ; memory mapped, for LD/ST
CANIE2                  =0xDE  ; memory mapped, for LD/ST
CANIE1                  =0xDF  ; memory mapped, for LD/ST
CANSIT2                 =0xE0  ; memory mapped, for LD/ST
CANSIT1                 =0xE1  ; memory mapped, for LD/ST
CANBT1                  =0xE2  ; memory mapped, for LD/ST
BRP                     =1
BRP_MSK                 =0x7E  ; memory mapped, for LD/ST
CANBT2                  =0xE3  ; memory mapped, for LD/ST
SJW1                    =6
SJW0                    =5
SJW                     =5
PRS2                    =3
PRS1                    =2
PRS0                    =1
PRS                     =1
SJW_MSK                 =0x60  ; memory mapped, for LD/ST
PRS_MSK                 =14
CANBT3                  =0xE4  ; memory mapped, for LD/ST
PHS22                   =6
PHS21                   =5
PHS20                   =4
PHS2                    =4
PHS12                   =3
PHS11                   =2
PHS10                   =1
PHS1                    =1
SMP                     =0
PHS2_MSK                =0x70  ; memory mapped, for LD/ST
PHS1_MSK                =14
CANTCON                 =0xE5  ; memory mapped, for LD/ST
CANTIM                  =0xE6  ; memory mapped, for LD/ST
CANTIML                 =0xE6  ; memory mapped, for LD/ST
CANTIMH                 =0xE7  ; memory mapped, for LD/ST
CANTTC                  =0xE8  ; memory mapped, for LD/ST
CANTTCL                 =0xE8  ; memory mapped, for LD/ST
CANTTCH                 =0xE9  ; memory mapped, for LD/ST
CANTEC                  =0xEA  ; memory mapped, for LD/ST
CANREC                  =0xEB  ; memory mapped, for LD/ST
CANHPMOB                =0xEC  ; memory mapped, for LD/ST
HPMOB3                  =7
HPMOB2                  =6
HPMOB1                  =5
HPMOB0                  =4
HPMOB                   =4
HPMOB_MSK               =0xF0  ; memory mapped, for LD/ST
CGP3                    =3
CGP2                    =2
CGP1                    =1
CGP0                    =0
CGP                     =0
CANPAGE                 =0xED  ; memory mapped, for LD/ST
MOBNB3                  =7
MOBNB2                  =6
MOBNB1                  =5
MOBNB0                  =4
MOBNB                   =4
MOBNB_MSK               =0xF0  ; memory mapped, for LD/ST
AINC                    =3
INDX2                   =2
INDX1                   =1
INDX0                   =0
INDX                    =0
INDX_MSK                =7
CANSTMOB                =0xEE  ; memory mapped, for LD/ST
DLCW                    =7
TXOK                    =6
RXOK                    =5
BERR                    =4
SERR                    =3
CERR                    =2
FERR                    =1
AERR                    =0
ERR_MOB_MSK             =31
INT_MOB_MSK             =0x7F  ; memory mapped, for LD/ST
CANCDMOB                =0xEF  ; memory mapped, for LD/ST
CONMOB1                 =7
CONMOB0                 =6
CONMOB                  =6
RPLV                    =5
IDE                     =4
DLC3                    =3
DLC2                    =2
DLC1                    =1
DLC0                    =0
DLC                     =0
CONMOB_MSK              =0xC0  ; memory mapped, for LD/ST
DLC_MSK                 =15
CANIDT4                 =0xF0  ; memory mapped, for LD/ST
RTRTAG                  =2
RB1TAG                  =1
RB0TAG                  =0
CANIDT3                 =0xF1  ; memory mapped, for LD/ST
CANIDT2                 =0xF2  ; memory mapped, for LD/ST
CANIDT1                 =0xF3  ; memory mapped, for LD/ST
CANIDM4                 =0xF4  ; memory mapped, for LD/ST
RTRMSK                  =2
IDEMSK                  =0
CANIDM3                 =0xF5  ; memory mapped, for LD/ST
CANIDM2                 =0xF6  ; memory mapped, for LD/ST
CANIDM1                 =0xF7  ; memory mapped, for LD/ST
CANSTM                  =0xF8  ; memory mapped, for LD/ST
CANSTML                 =0xF8  ; memory mapped, for LD/ST
CANSTMH                 =0xF9  ; memory mapped, for LD/ST
CANMSG                  =0xFA  ; memory mapped, for LD/ST
;
; Lock and Fuse Bits
;
; lock bits
BLB12                   =5
BLB11                   =4
BLB02                   =3
BLB01                   =2
BLB                     =2
LB2                     =1
LB1                     =0
LB                      =0
;
; fuses extended bits
PSCRB                   =5
PSCRVA                  =4
PSCRVB                  =3
BODLEVEL2               =2
BODLEVEL1               =1
BODLEVEL0               =0
BODLEVEL                =0
;
; fuses high bits
RSTDISBL                =7
DWEN                    =6
SPIEN                   =5
WDTON                   =4
EESAVE                  =3
BOOTSZ1                 =2
BOOTSZ0                 =1
BOOTSZ                  =1
BOOTRST                 =0
;
; fuses low bits
CKDIV8                  =7
CKOUT                   =6
SUT1                    =5
SUT0                    =4
SUT                     =4
CKSEL3                  =3
CKSEL2                  =2
CKSEL1                  =1
CKSEL0                  =0
CKSEL                   =0
;
; ------------------------------------------------------------
;
; Interrupt Vector Macros
;
.macro set_vector_ANA_COMP0
 .area vector (abs)
 .org  0x04
  jmp  @0
 .area text
.endmacro
.macro set_vector_ANA_COMP1
 .area vector (abs)
 .org  0x08
  jmp  @0
 .area text
.endmacro
.macro set_vector_ANA_COMP2
 .area vector (abs)
 .org  0x0C
  jmp  @0
 .area text
.endmacro
.macro set_vector_ANA_COMP3
 .area vector (abs)
 .org  0x10
  jmp  @0
 .area text
.endmacro
.macro set_vector_PSC_FAULT
 .area vector (abs)
 .org  0x14
  jmp  @0
 .area text
.endmacro
.macro set_vector_PSC_EC
 .area vector (abs)
 .org  0x18
  jmp  @0
 .area text
.endmacro
.macro set_vector_INT0
 .area vector (abs)
 .org  0x1C
  jmp  @0
 .area text
.endmacro
.macro set_vector_EXT_INT0
 .area vector (abs)
 .org  0x1C
  jmp  @0
 .area text
.endmacro
.macro set_vector_INT1
 .area vector (abs)
 .org  0x20
  jmp  @0
 .area text
.endmacro
.macro set_vector_EXT_INT1
 .area vector (abs)
 .org  0x20
  jmp  @0
 .area text
.endmacro
.macro set_vector_INT2
 .area vector (abs)
 .org  0x24
  jmp  @0
 .area text
.endmacro
.macro set_vector_EXT_INT2
 .area vector (abs)
 .org  0x24
  jmp  @0
 .area text
.endmacro
.macro set_vector_INT3
 .area vector (abs)
 .org  0x28
  jmp  @0
 .area text
.endmacro
.macro set_vector_EXT_INT3
 .area vector (abs)
 .org  0x28
  jmp  @0
 .area text
.endmacro
.macro set_vector_TIM1_CAPT
 .area vector (abs)
 .org  0x2C
  jmp  @0
 .area text
.endmacro
.macro set_vector_TIMER1_CAPT
 .area vector (abs)
 .org  0x2C
  jmp  @0
 .area text
.endmacro
.macro set_vector_TIM1_COMPA
 .area vector (abs)
 .org  0x30
  jmp  @0
 .area text
.endmacro
.macro set_vector_TIMER1_COMPA
 .area vector (abs)
 .org  0x30
  jmp  @0
 .area text
.endmacro
.macro set_vector_TIM1_COMPB
 .area vector (abs)
 .org  0x34
  jmp  @0
 .area text
.endmacro
.macro set_vector_TIMER1_COMPB
 .area vector (abs)
 .org  0x34
  jmp  @0
 .area text
.endmacro
.macro set_vector_TIM1_OVF
 .area vector (abs)
 .org  0x38
  jmp  @0
 .area text
.endmacro
.macro set_vector_TIMER1_OVF
 .area vector (abs)
 .org  0x38
  jmp  @0
 .area text
.endmacro
.macro set_vector_TIM0_COMPA
 .area vector (abs)
 .org  0x3C
  jmp  @0
 .area text
.endmacro
.macro set_vector_TIMER0_COMPA
 .area vector (abs)
 .org  0x3C
  jmp  @0
 .area text
.endmacro
.macro set_vector_TIM0_COMPB
 .area vector (abs)
 .org  0x40
  jmp  @0
 .area text
.endmacro
.macro set_vector_TIMER0_COMPB
 .area vector (abs)
 .org  0x40
  jmp  @0
 .area text
.endmacro
.macro set_vector_TIM0_OVF
 .area vector (abs)
 .org  0x44
  jmp  @0
 .area text
.endmacro
.macro set_vector_TIMER0_OVF
 .area vector (abs)
 .org  0x44
  jmp  @0
 .area text
.endmacro
.macro set_vector_CAN_IT
 .area vector (abs)
 .org  0x48
  jmp  @0
 .area text
.endmacro
.macro set_vector_CANIT
 .area vector (abs)
 .org  0x48
  jmp  @0
 .area text
.endmacro
.macro set_vector_CAN
 .area vector (abs)
 .org  0x48
  jmp  @0
 .area text
.endmacro
.macro set_vector_CAN_TRANSFER
 .area vector (abs)
 .org  0x48
  jmp  @0
 .area text
.endmacro
.macro set_vector_CAN_INT
 .area vector (abs)
 .org  0x48
  jmp  @0
 .area text
.endmacro
.macro set_vector_CTIM_OVF
 .area vector (abs)
 .org  0x4C
  jmp  @0
 .area text
.endmacro
.macro set_vector_OVRIT
 .area vector (abs)
 .org  0x4C
  jmp  @0
 .area text
.endmacro
.macro set_vector_CAN_TIM_OVF
 .area vector (abs)
 .org  0x4C
  jmp  @0
 .area text
.endmacro
.macro set_vector_CAN_TIM_OVR
 .area vector (abs)
 .org  0x4C
  jmp  @0
 .area text
.endmacro
.macro set_vector_CAN_TOVF
 .area vector (abs)
 .org  0x4C
  jmp  @0
 .area text
.endmacro
.macro set_vector_LIN_TC
 .area vector (abs)
 .org  0x50
  jmp  @0
 .area text
.endmacro
.macro set_vector_LIN_ERR
 .area vector (abs)
 .org  0x54
  jmp  @0
 .area text
.endmacro
.macro set_vector_PCINT0
 .area vector (abs)
 .org  0x58
  jmp  @0
 .area text
.endmacro
.macro set_vector_PCINT1
 .area vector (abs)
 .org  0x5C
  jmp  @0
 .area text
.endmacro
.macro set_vector_PCINT2
 .area vector (abs)
 .org  0x60
  jmp  @0
 .area text
.endmacro
.macro set_vector_PCINT3
 .area vector (abs)
 .org  0x64
  jmp  @0
 .area text
.endmacro
.macro set_vector_SPI_STC
 .area vector (abs)
 .org  0x68
  jmp  @0
 .area text
.endmacro
.macro set_vector_ADC
 .area vector (abs)
 .org  0x6C
  jmp  @0
 .area text
.endmacro
.macro set_vector_WDT
 .area vector (abs)
 .org  0x70
  jmp  @0
 .area text
.endmacro
.macro set_vector_EE_RDY
 .area vector (abs)
 .org  0x74
  jmp  @0
 .area text
.endmacro
.macro set_vector_EE_READY
 .area vector (abs)
 .org  0x74
  jmp  @0
 .area text
.endmacro
.macro set_vector_SPM_RDY
 .area vector (abs)
 .org  0x78
  jmp  @0
 .area text
.endmacro
.macro set_vector_SPM_READY
 .area vector (abs)
 .org  0x78
  jmp  @0
 .area text
.endmacro
;------
;<eof>
