; iccavr asm header file for m4HVD
; generated by maschag 0.8.7 on 05-21-2009
;-------------------------------------------------------------
;
; Memory info
FLASHEND                =0x0FFF
E2END                   =0x00FF
RAMSTART                =0x0100
RAMEND                  =0x02FF
XRAMEND                 =0 ; Part has no external RAM interface
;
;-------------------------------------------------------------
;
; Port C
PINC                    =0x06  ; for IN/OUT, CBI/SBI, SBIC/SBIS
PORTC                   =0x08  ; for IN/OUT, CBI/SBI, SBIC/SBIS
;
; Port B
PINB                    =0x03  ; for IN/OUT, CBI/SBI, SBIC/SBIS
DDRB                    =0x04  ; for IN/OUT, CBI/SBI, SBIC/SBIS
PORTB                   =0x05  ; for IN/OUT, CBI/SBI, SBIC/SBIS
;
; Timer/Counter Interrupts
TIFR0                   =0x15  ; for IN/OUT, CBI/SBI, SBIC/SBIS
ICF0                    =3
OCF0B                   =2
OCF0A                   =1
TOV0                    =0
TIMSK0                  =0x6E  ; memory mapped, for LD/ST
ICIE1                   =3
OCIE0B                  =2
OCIE0A                  =1
TOIE0                   =0
TIFR1                   =0x16  ; for IN/OUT, CBI/SBI, SBIC/SBIS
ICF1                    =3
OCF1B                   =2
OCF1A                   =1
TOV1                    =0
TIMSK1                  =0x6F  ; memory mapped, for LD/ST
ICIE1                   =3
OCIE1B                  =2
OCIE1A                  =1
TOIE1                   =0
;
; OSI
OSICSR                  =0x17  ; for IN/OUT, CBI/SBI, SBIC/SBIS
OSISEL                  =4
OSIST                   =1
OSIEN                   =0
;
; External Interrupts
EIFR                    =0x1C  ; for IN/OUT, CBI/SBI, SBIC/SBIS
INTF2                   =2
INTF1                   =1
INTF0                   =0
EIMSK                   =0x1D  ; for IN/OUT, CBI/SBI, SBIC/SBIS
INT2                    =2
INT1                    =1
INT0                    =0
EICRA                   =0x69  ; memory mapped, for LD/ST
ISC11                   =3
ISC10                   =2
ISC01                   =1
ISC00                   =0
;
; GPIOR
GPIOR0                  =0x1E  ; for IN/OUT, CBI/SBI, SBIC/SBIS
GPIOR1                  =0x2A  ; for IN/OUT
GPIOR2                  =0x2B  ; for IN/OUT
;
; EEPROM
EECR                    =0x1F  ; for IN/OUT, CBI/SBI, SBIC/SBIS
EEPM1                   =5
EEPM0                   =4
EERIE                   =3
EEMPE                   =2
EEMWE                   =2
EEPE                    =1
EEWE                    =1
EERE                    =0
EEDR                    =0x20  ; for IN/OUT, CBI/SBI, SBIC/SBIS
EEAR                    =0x21  ; for IN/OUT
EEARL                   =0x21  ; for IN/OUT
;
; GTCCR
GTCCR                   =0x23  ; for IN/OUT
TSM                     =7
PSRSYNC                 =0
PSR                     =0
;
; Timer/Counter 0
OCR0                    =0x28  ; for IN/OUT
OCR0L                   =0x28  ; for IN/OUT
OCR0H                   =0x29  ; for IN/OUT
OCR0A                   =0x28  ; for IN/OUT
OCR0B                   =0x29  ; for IN/OUT
TCNT0                   =0x26  ; for IN/OUT
TCNT0L                  =0x26  ; for IN/OUT
TCNT0H                  =0x27  ; for IN/OUT
TCCR0B                  =0x25  ; for IN/OUT
CS02                    =2
CS01                    =1
CS00                    =0
TCCR0A                  =0x24  ; for IN/OUT
TCW0                    =7
ICEN0                   =6
ICNC0                   =5
ICES0                   =4
ICS0                    =3
WGM00                   =0
;
; DWDR
DWDR                    =0x31  ; for IN/OUT
;
; MCU
MCUSR                   =0x34  ; for IN/OUT
OCDRF                   =4
WDRF                    =3
; #define  BODRF    2
; #define  BORF     2
EXTRF                   =1
PORF                    =0
MCUCR                   =0x35  ; for IN/OUT
CKOE                    =5
PUD                     =4
SMCR                    =0x33  ; for IN/OUT
SM2                     =3
SM1                     =2
SM0                     =1
SE                      =0
;
; SPM Control and Status Register
SPMCSR                  =0x37  ; for IN/OUT
SIGRD                   =5
CTPB                    =4
RFLB                    =3
PGWRT                   =2
PGERS                   =1
SPMEN                   =0
;
; Stack Pointer
SP                      =0x3D  ; for IN/OUT
SPL                     =0x3D  ; for IN/OUT
SPH                     =0x3E  ; for IN/OUT
;
; Status REGister
SREG                    =0x3F  ; for IN/OUT
;
; Watchdog Timer Control Register
WDTCSR                  =0x60  ; memory mapped, for LD/ST
WDTCR                   =0x60  ; memory mapped, for LD/ST
WDIF                    =7
WDIE                    =6
WDP3                    =5
WDCE                    =4
WDE                     =3
WDP2                    =2
WDP1                    =1
WDP0                    =0
;
; clock prescaler control register
CLKPR                   =0x61  ; memory mapped, for LD/ST
CLKPCE                  =7
; #define  CLKPS3   3
; #define  CLKPS2   2
CLKPS1                  =1
CLKPS0                  =0
;
; PRR
PRR0                    =0x64  ; memory mapped, for LD/ST
PRVRM                   =6
PRTIM1                  =2
PRTIM0                  =1
PRVADC                  =0
;
; Oscillator Calibration Register
FOSCCAL                 =0x66  ; memory mapped, for LD/ST
;
; ADC
ADC                     =0x78  ; memory mapped, for LD/ST
ADCL                    =0x78  ; memory mapped, for LD/ST
ADCH                    =0x79  ; memory mapped, for LD/ST
ADCSR                   =0x7A  ; memory mapped, for LD/ST
ADCSRA                  =0x7A  ; memory mapped, for LD/ST
ADEN                    =7
ADSC                    =6
ADIF                    =4
ADIE                    =3
ADMUX1                  =1
ADMUX0                  =0
;
; DIDR
DIDR0                   =0x7E  ; memory mapped, for LD/ST
PB0DID                  =0
;
; Timer/Counter1
OCR1                    =0x88  ; memory mapped, for LD/ST
OCR1L                   =0x88  ; memory mapped, for LD/ST
OCR1H                   =0x89  ; memory mapped, for LD/ST
OCR1A                   =0x88  ; memory mapped, for LD/ST
OCR1B                   =0x89  ; memory mapped, for LD/ST
TCNT1                   =0x84  ; memory mapped, for LD/ST
TCNT1L                  =0x84  ; memory mapped, for LD/ST
TCNT1H                  =0x85  ; memory mapped, for LD/ST
TCCR1B                  =0x81  ; memory mapped, for LD/ST
CS12                    =2
CS11                    =1
CS10                    =0
TCCR1A                  =0x80  ; memory mapped, for LD/ST
TCW1                    =7
ICEN1                   =6
ICNC1                   =5
ICES1                   =4
ICS1                    =3
WGM10                   =0
;
; RO
ROCR                    =0xC8  ; memory mapped, for LD/ST
ROCS                    =7
RSCDEN                  =2
ROCWIF                  =1
ROCWIE                  =0
;
; FCSR
FCSR                    =0xF0  ; memory mapped, for LD/ST
DUVRD                   =3
CPS                     =2
DFE                     =1
CFE                     =0
;
; BP
BPIMSK                  =0xF2  ; memory mapped, for LD/ST
SCIE                    =4
DOCIE                   =3
COCIE                   =2
; #define  DHCIE    1
; #define  CHCIE    0
BPIFR                   =0xF3  ; memory mapped, for LD/ST
SCIF                    =4
DOCIF                   =3
COCIF                   =2
; #define  DHCIF    1
; #define  CHCIF    0
BPSCD                   =0xF5  ; memory mapped, for LD/ST
BPDOCD                  =0xF6  ; memory mapped, for LD/ST
BPCOCD                  =0xF7  ; memory mapped, for LD/ST
; #define BPDHCD	(*(volatile unsigned char *)0xF8)
; #define BPCHCD	(*(volatile unsigned char *)0xF9)
BPSCTR                  =0xFA  ; memory mapped, for LD/ST
BPOCTR                  =0xFB  ; memory mapped, for LD/ST
; #define BPHCTR	(*(volatile unsigned char *)0xFC)
BPCR                    =0xFD  ; memory mapped, for LD/ST
EPID                    =5
SCD                     =4
DOCD                    =3
COCD                    =2
; #define  DHCD     1
; #define  CHCD     0
BPPLR                   =0xFE  ; memory mapped, for LD/ST
BPPLE                   =1
BPPL                    =0
;
; bits
;
; Port B
PORTB2                  =2
PORTB1                  =1
PORTB0                  =0
PB2                     =2
PB1                     =1
PB0                     =0
DDB2                    =2
DDB1                    =1
DDB0                    =0
PINB2                   =2
PINB1                   =1
PINB0                   =0
;
; Port C
PORTC1                  =1
PORTC0                  =0
PC1                     =1
PC0                     =0
PINC1                   =1
PINC0                   =0
;
; Lock and Fuse Bits with LPM/SPM instructions
;
; lock bits
LB2                     =1
LB1                     =0
;
; fuses low bits
WDTON                   =7
EESAVE                  =6
SPIEN                   =5
DWEN                    =4
SELFPRGEN               =3
SUT2                    =2
SUT1                    =1
SUT0                    =0
;
; fuses high bits
OSCSEL1                 =1
OSCSEL0                 =0
;
; ------------------------------------------------------------
;
; Interrupt Vector Macros
;
.macro set_vector_BPINT
 .area vector (abs)
 .org  0x02
  rjmp @0
 .area text
.endmacro
.macro set_vector_VREGMON
 .area vector (abs)
 .org  0x04
  rjmp @0
 .area text
.endmacro
.macro set_vector_INT0
 .area vector (abs)
 .org  0x06
  rjmp @0
 .area text
.endmacro
.macro set_vector_EXT_INT0
 .area vector (abs)
 .org  0x06
  rjmp @0
 .area text
.endmacro
.macro set_vector_INT1
 .area vector (abs)
 .org  0x08
  rjmp @0
 .area text
.endmacro
.macro set_vector_EXT_INT1
 .area vector (abs)
 .org  0x08
  rjmp @0
 .area text
.endmacro
.macro set_vector_WDT
 .area vector (abs)
 .org  0x0A
  rjmp @0
 .area text
.endmacro
.macro set_vector_TIMER1_IC
 .area vector (abs)
 .org  0x0C
  rjmp @0
 .area text
.endmacro
.macro set_vector_TIMER1_CAPT
 .area vector (abs)
 .org  0x0C
  rjmp @0
 .area text
.endmacro
.macro set_vector_TIMER1_COMPA
 .area vector (abs)
 .org  0x0E
  rjmp @0
 .area text
.endmacro
.macro set_vector_TIMER1_COMPB
 .area vector (abs)
 .org  0x10
  rjmp @0
 .area text
.endmacro
.macro set_vector_TIMER1_OF
 .area vector (abs)
 .org  0x12
  rjmp @0
 .area text
.endmacro
.macro set_vector_TIMER1_OVF
 .area vector (abs)
 .org  0x12
  rjmp @0
 .area text
.endmacro
.macro set_vector_TIM1_CAPT
 .area vector (abs)
 .org  0x0C
  rjmp @0
 .area text
.endmacro
.macro set_vector_TIM1_COMPA
 .area vector (abs)
 .org  0x0E
  rjmp @0
 .area text
.endmacro
.macro set_vector_TIM1_COMPB
 .area vector (abs)
 .org  0x10
  rjmp @0
 .area text
.endmacro
.macro set_vector_TIM1_OVF
 .area vector (abs)
 .org  0x12
  rjmp @0
 .area text
.endmacro
.macro set_vector_TIMER0_IC
 .area vector (abs)
 .org  0x14
  rjmp @0
 .area text
.endmacro
.macro set_vector_TIMER0_CAPT
 .area vector (abs)
 .org  0x14
  rjmp @0
 .area text
.endmacro
.macro set_vector_TIMER0_COMPA
 .area vector (abs)
 .org  0x16
  rjmp @0
 .area text
.endmacro
.macro set_vector_TIMER0_COMPB
 .area vector (abs)
 .org  0x18
  rjmp @0
 .area text
.endmacro
.macro set_vector_TIMER0_OF
 .area vector (abs)
 .org  0x1A
  rjmp @0
 .area text
.endmacro
.macro set_vector_TIMER0_OVF
 .area vector (abs)
 .org  0x1A
  rjmp @0
 .area text
.endmacro
.macro set_vector_TIM0_CAPT
 .area vector (abs)
 .org  0x14
  rjmp @0
 .area text
.endmacro
.macro set_vector_TIM0_COMPA
 .area vector (abs)
 .org  0x16
  rjmp @0
 .area text
.endmacro
.macro set_vector_TIM0_COMPB
 .area vector (abs)
 .org  0x18
  rjmp @0
 .area text
.endmacro
.macro set_vector_TIM0_OVF
 .area vector (abs)
 .org  0x1A
  rjmp @0
 .area text
.endmacro
.macro set_vector_ADC_COMPLETE
 .area vector (abs)
 .org  0x1C
  rjmp @0
 .area text
.endmacro
.macro set_vector_ADC
 .area vector (abs)
 .org  0x1C
  rjmp @0
 .area text
.endmacro
.macro set_vector_EE_RDY
 .area vector (abs)
 .org  0x1E
  rjmp @0
 .area text
.endmacro
.macro set_vector_EE_READY
 .area vector (abs)
 .org  0x1E
  rjmp @0
 .area text
.endmacro
;------
;<eof>
