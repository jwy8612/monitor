//ICC-AVR application builder : 2017/3/15 15:13:54
// Target : M16
// Crystal: 11.059Mhz

#include <iom16v.h>
#include <macros.h>

//#define CLOCK11059
#define CLOCK73728

//#define UART57600
//#define UART115200
#define UART9600

void port_init(void)
{
	 PORTA = 0x00;
	 DDRA  = 0xff;
	 PORTB = 0x00;
	 DDRB  = 0x00;
	 PORTC = 0x00; //m103 output only
	 DDRC  = 0x00;
	 PORTD = 0x00;
	 DDRD  = 0x02;
}

//Watchdog initialize
// prescale: 32K 
void watchdog_init(void)
{
	 WDR(); //this prevents a timout on enabling
	 #ifdef CLOCK11059
	 WDTCR = 0x09; //WATCHDOG ENABLED - dont forget to issue WDRs
	 #endif
	 #ifdef CLOCK73728

	 #endif
}

//TIMER0 initialize - prescale:1024
// WGM: Normal
// desired value: 1KHz
// actual value:  1.080KHz (7.4%)
void timer0_init(void)
{
#ifdef CLOCK11059
	 TCCR0 = 0x00; //stop
	 TCNT0 = 0xF6; //set count
	 OCR0  = 0x0A;  //set compare
	 TCCR0 = 0x05; //start timer
#endif
#ifdef CLOCK73728
	TCCR0 = 0x00; //stop
	TCNT0 = 0x8D; //set count
	OCR0  = 0x73;  //set compare
	TCCR0 = 0x03; //start timer

#endif
}

#pragma interrupt_handler timer0_ovf_isr:iv_TIM0_OVF
void timer0_ovf_isr(void)
{
	static int a=0;
#ifdef CLOCK11059
	 TCNT0 = 0xF6; //reload counter value
#endif
#ifdef CLOCK73728
	 TCNT0 = 0x8D; //reload counter value
#endif	 
a++;
if(1000==a){
	if(PINA)
	PORTA = 0;
	else

	PORTA =0xff;
	a=0;
}

}

//SPI initialize
// clock rate: 2764749hz
void spi_init(void)
{
	 SPCR = 0x50; //setup SPI
	 SPSR = 0x00; //setup SPI
}

//UART0 initialize
// desired baud rate: 115200
// actual: baud rate:115198 (0.0%)
void uart0_init(void)
{

#ifdef CLOCK11059
#ifdef UART115200
	 UCSRB = 0x00; //disable while setting baud rate
	 UCSRA = 0x00;
	 UCSRC = BIT(URSEL) | 0x06;
	 UBRRL = 0x05; //set baud rate lo
	 UBRRH = 0x00; //set baud rate hi
	 UCSRB = 0x98;
#endif
#ifdef UART57600
	 UCSRB = 0x00; //disable while setting baud rate
	 UCSRA = 0x00;
	 UCSRC = BIT(URSEL) | 0x06;
	 UBRRL = 0x0B; //set baud rate lo
	 UBRRH = 0x00; //set baud rate hi
	 UCSRB = 0x98;
#endif
#endif
#ifdef CLOCK73728
#ifdef UART115200
	UCSRB = 0x00; //disable while setting baud rate
	UCSRA = 0x00;
	UCSRC = BIT(URSEL) | 0x06;
	UBRRL = 0x03; //set baud rate lo
	UBRRH = 0x00; //set baud rate hi
	UCSRB = 0x98;

#endif
#ifdef UART57600
	UCSRB = 0x00; //disable while setting baud rate
	UCSRA = 0x00;
	UCSRC = BIT(URSEL) | 0x06;
	UBRRL = 0x07; //set baud rate lo
	UBRRH = 0x00; //set baud rate hi
	UCSRB = 0x98;

#endif
#ifdef UART9600
UCSRB = 0x00; //disable while setting baud rate
UCSRA = 0x00;
UCSRC = BIT(URSEL) | 0x06;

UBRRL = 0x2F; //set baud rate lo
UBRRH = 0x00; //set baud rate hi
UCSRB = 0x98;

#endif
#endif
}

#pragma interrupt_handler uart0_rx_isr:iv_USART0_RXC
void uart0_rx_isr(void)
{
	 //uart has received a character in UDR
}

#pragma interrupt_handler int0_isr:iv_INT0
void int0_isr(void)
{
	 //external interupt on INT0
	 USART_send_str("abcd");
	 if(PINA)
	 PORTA = 0;
	 else
	 	PORTA =0xff;
}

#pragma interrupt_handler int1_isr:iv_INT1
void int1_isr(void)
{
	 //external interupt on INT1
}

//call this routine to initialize all peripherals
void init_devices(void)
{
 //stop errant interrupts until set up
	 CLI(); //disable all interrupts
	 port_init();
	 watchdog_init();
	 timer0_init();
	 spi_init();
	 uart0_init();

	 MCUCR = 0x0A;
	 GICR  = 0xC0;
	 TIMSK = 0x01; //timer interrupt sources
	 SEI(); //re-enable interrupts
 //all peripherals are now initialized
}
void USART_Transmit( unsigned char data )     //发送模块，该程序没用到
{
	/* Wait for empty transmit buffer */
	while( !( UCSRA & (1<<UDRE)))/* Put data into buffer, sends the data */
		;
	UDR = data;
}
void USART_send_str(unsigned char * str)		//发送字符串
{
	int i=0;
	while(*(str++)!= 0){
		USART_Transmit(*(str-1));
	}
	USART_Transmit('\r');
	USART_Transmit('\n');
}
void main(void )
{
	init_devices();
	for(;;){
		//USART_Transmit(8);

		WDR();


	}
}
